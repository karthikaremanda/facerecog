{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karth\\\\Desktop\\\\face _web\\\\face_recog\\\\src\\\\components\\\\PrivateRoute.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate, Outlet, useLocation } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport LoadingScreen from './LoadingScreen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = () => {\n  _s();\n  const {\n    isAuthenticated,\n    loading\n  } = useAuth();\n  const location = useLocation();\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(LoadingScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n  return isAuthenticated ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\",\n    state: {\n      from: location\n    },\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(PrivateRoute, \"fNj96oVmPd4sFazcimgf9N7S8ao=\", false, function () {\n  return [useAuth, useLocation];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Navigate","Outlet","useLocation","useAuth","LoadingScreen","jsxDEV","_jsxDEV","PrivateRoute","_s","isAuthenticated","loading","location","fileName","_jsxFileName","lineNumber","columnNumber","to","state","from","replace","_c","$RefreshReg$"],"sources":["C:/Users/karth/Desktop/face _web/face_recog/src/components/PrivateRoute.tsx"],"sourcesContent":["import React from 'react';\nimport { Navigate, Outlet, useLocation } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport LoadingScreen from './LoadingScreen';\n\nconst PrivateRoute: React.FC = () => {\n  const { isAuthenticated, loading } = useAuth();\n  const location = useLocation();\n\n  if (loading) {\n    return <LoadingScreen />;\n  }\n\n  return isAuthenticated ? (\n    <Outlet />\n  ) : (\n    <Navigate to=\"/login\" state={{ from: location }} replace />\n  );\n};\n\nexport default PrivateRoute;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,MAAM,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,SAASC,OAAO,QAAQ,wBAAwB;AAChD,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,YAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM;IAAEC,eAAe;IAAEC;EAAQ,CAAC,GAAGP,OAAO,CAAC,CAAC;EAC9C,MAAMQ,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,IAAIQ,OAAO,EAAE;IACX,oBAAOJ,OAAA,CAACF,aAAa;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC1B;EAEA,OAAON,eAAe,gBACpBH,OAAA,CAACL,MAAM;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,gBAEVT,OAAA,CAACN,QAAQ;IAACgB,EAAE,EAAC,QAAQ;IAACC,KAAK,EAAE;MAAEC,IAAI,EAAEP;IAAS,CAAE;IAACQ,OAAO;EAAA;IAAAP,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAC3D;AACH,CAAC;AAACP,EAAA,CAbID,YAAsB;EAAA,QACWJ,OAAO,EAC3BD,WAAW;AAAA;AAAAkB,EAAA,GAFxBb,YAAsB;AAe5B,eAAeA,YAAY;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}